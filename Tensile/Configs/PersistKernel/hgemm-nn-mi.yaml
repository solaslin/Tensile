GlobalParameters:
  MinimumRequiredVersion: 4.14.0
  PrintLevel: 1
  ForceRedoBenchmarkProblems: True
  ForceRedoLibraryLogic: True
  ForceRedoLibraryClient: True
  CMakeBuildType: Release
  EnqueuesPerSync: 1
  SyncsPerBenchmark: 1
  LibraryPrintDebug: False
  NumElementsToValidate: 0
  NumBenchmarks: 1
  ValidationMaxToPrint: 4
  ValidationPrintValids: False
  ShortNames: False
  Platform: 0
  Device: 0
  KernelTime: True
  PinClocks: False
  HardwareMonitor: False
  SleepPercent: 200
  # PrintSolutionRejectionReason: True
  PrintWinnersOnly: True
  # ForceGenerateKernel: True
  # DataInitTypeA: 3
  # DataInitTypeB: 3
  # DataInitTypeC: 3
  # DataInitTypeD: 3
  DataInitTypeBeta: 0
  DataInitTypeAlpha: 1
  PrintTensorA: 0
  PrintTensorB: 0
  PrintTensorD: 0
  NewClient: 2
  MergeFiles: True

  CSVExportWinner: True
  CSVMergeSameProblemID: True

BenchmarkProblems:
  ########################################
  # TN - standard
  ########################################
  -
    - # ProblemType
      OperationType: GEMM
      DataType: h
      # DestDataType: B
      # ComputeDataType: s
      HighPrecisionAccumulate: True
      TransposeA: False
      TransposeB: False
      UseBeta: True
      Batched: True
#     - # BenchmarkProblemSizeGroup - Standard
#       InitialSolutionParameters:
#       BenchmarkCommonParameters:
#         - KernelLanguage: ["Assembly"]
#         - EdgeType: ["ShiftPtr"]
#       ForkParameters:
#         # - PersistentKernel: [1,2,4,8,64,120]
#         # - PersistentKernelAlongBatch: [False, True]
#         - MatrixInstruction:
#           - [32, 32, 4, 2,  2,  1,1,  1]
#           - [32, 32, 4, 2,  2,  1,1,  2]
#           - [32, 32, 4, 2,  2,  2,1,  1]
#           - [32, 32, 4, 2,  2,  2,2,  1]
#           - [32, 32, 4, 2,  2,  2,2,  2]
#           - [32, 32, 8, 1,  1,  1,1,  2]
#           - [32, 32, 8, 1,  1,  1,2,  2]
#           - [32, 32, 8, 1,  1,  2,1,  2]
#           - [32, 32, 8, 1,  1,  2,2,  2]
#           - [32, 32, 8, 1,  1,  2,4,  2]
#           - [32, 32, 8, 1,  1,  4,2,  2]
#           - [16, 16, 16, 1,  1,  1,1,  2]
#           - [16, 16, 16, 1,  1,  1,2,  2]
#           - [16, 16, 16, 1,  1,  2,1,  2]
#           # - [32, 32, 4, 2]
#           # - [32, 32, 8, 1]
#           # - [16, 16, 16, 1]
#         - ThreadTile:
#           - [ 1, 32 ]
#           # - [ 2, 16 ]
#         - WorkGroup:
#           - [ 64, 4, 1 ]
#           # - [ 32, 8, 1 ]
#         - AssertSummationElementMultiple: [1]
#         - AssertFree0ElementMultiple: [1,4]
#         - AssertFree1ElementMultiple: [1]
#         - PrefetchGlobalRead: [1]
#         - PrefetchLocalRead: [1]
#         - DepthU: [32,64,128]
#         # - DepthU: [32,64]
#         - VectorWidth: [2]
#         - GlobalReadVectorWidth: [2,4,8]
#         # - GlobalReadVectorWidth: [2,8]
#         # - LocalReadVectorWidth: [8]
#         - SuppressNoLoadLoop: [0]
#         - OptNoLoadLoop: [1]
#         - ScheduleLocalWrite: [1]
#         - ScheduleGlobalRead: [1]
#         - ScheduleIterAlg: [3]
#         - InnerUnroll: [1]
#         - ExpandPointerSwap: [1]
#         - TransposeLDS: [1]
#         - LdsBlockSizePerPad: [-1]
#         - LdsPadA: [-1]
#         - LdsPadB: [-1]
#         - StoreRemapVectorWidth: [0,4]
#         # - StaggerUMapping: [0,3]  # Ethan
#         # - StaggerUStride: [128,256]  # Ethan
#         # - StaggerU: [0,16,32]  # Ethan
#         # - WorkGroupMapping: [1,2,15]  # Ethan
#         - WorkGroupMapping: [1]  # Ethan
#         - WaveSeparateGlobalReadA: [1]  # Ethan
#         - WaveSeparateGlobalReadB: [1]  # Ethan
#         # - 1LDSBuffer: [-1]
#       BenchmarkJoinParameters:
#       BenchmarkFinalParameters:
#         - ProblemSizes:
#           - Exact: [7680, 8192, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [3840, 4096, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [1920, 2048, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [960, 1024, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [480, 512, 1, 512, 544, 544, 544, 544]
#           - Exact: [8192, 7680, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [4096, 3840, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [2048, 1920, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [1024, 960, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [512, 480, 1, 512, 544, 544, 544, 544]
#           - Exact: [8192, 8192, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [4096, 4096, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [2048, 2048, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [1024, 1024, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [512, 512, 1, 512, 544, 544, 544, 544]
#           - Exact: {sizes: [64, 512, 16, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: {sizes: [64, 512, 128, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 1, 1, 2]
#           - Exact: [1024, 1, 1, 1024]
#           - Exact: [1024, 8, 1, 1024]
#           - Exact: [1024, 77, 1, 1024]
#           - Exact: [1024, 77, 1, 30522]
#           - Exact: [1024, 512, 1, 2]
#           - Exact: [1024, 512, 1, 1024]
#           - Exact: [1024, 512, 1, 4096]
#           - Exact: [1024, 616, 1, 1024]
#           - Exact: [1024, 4096, 1, 2]
#           - Exact: [1024, 4096, 1, 1024]
#           - Exact: [1024, 4096, 1, 4096]
#           - Exact: [4096, 512, 1, 1024]
#           - Exact: [4096, 4096, 1, 1024]
#           - Exact: {sizes: [64, 128, 128, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: {sizes: [64, 128, 160, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 10, 1, 2]
#           - Exact: [1024, 10, 1, 1024]
#           - Exact: [1024, 160, 1, 1024]
#           - Exact: [1024, 200, 1, 1024]
#           - Exact: [1024, 200, 1, 30522]
#           - Exact: [1024, 1024, 1, 2]
#           - Exact: [1024, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 4096]
#           - Exact: [1024, 1280, 1, 2]
#           - Exact: [1024, 1280, 1, 1024]
#           - Exact: [1024, 1280, 1, 4096]
#           - Exact: [4096, 1024, 1, 1024]
#           - Exact: [4096, 1280, 1, 1024]
#           - Exact: {sizes: [64, 128, 624, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 39, 1, 2]
#           - Exact: [1024, 39, 1, 1024]
#           - Exact: [1024, 780, 1, 1024]
#           - Exact: [1024, 780, 1, 30522]
#           - Exact: [1024, 4992, 1, 2]
#           - Exact: [1024, 4992, 1, 1024]
#           - Exact: [1024, 4992, 1, 4096]
#           - Exact: [4096, 4992, 1, 1024]
#           - Exact: {sizes: [64, 512, 64, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 4, 1, 2]
#           - Exact: [1024, 4, 1, 1024]
#           - Exact: [1024, 308, 1, 1024]
#           - Exact: [1024, 308, 1, 30522]
#           - Exact: [1024, 2048, 1, 2]
#           - Exact: [1024, 2048, 1, 1024]
#           - Exact: [1024, 2048, 1, 4096]
#           - Exact: [4096, 2048, 1, 1024]
#           - Exact: {sizes: [64, 128, 640, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 40, 1, 2]
#           - Exact: [1024, 40, 1, 1024]
#           - Exact: [1024, 800, 1, 1024]
#           - Exact: [1024, 800, 1, 30522]
#           - Exact: [1024, 5120, 1, 2]
#           - Exact: [1024, 5120, 1, 1024]
#           - Exact: [1024, 5120, 1, 4096]
#           - Exact: [4096, 5120, 1, 1024]
#           - Exact: {sizes: [64, 128, 656, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 41, 1, 2]
#           - Exact: [1024, 41, 1, 1024]
#           - Exact: [1024, 820, 1, 1024]
#           - Exact: [1024, 820, 1, 30522]
#           - Exact: [1024, 5248, 1, 2]
#           - Exact: [1024, 5248, 1, 1024]
#           - Exact: [1024, 5248, 1, 4096]
#           - Exact: [4096, 5248, 1, 1024]
#           - Exact: {sizes: [64, 512, 80, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 5, 1, 2]
#           - Exact: [1024, 5, 1, 1024]
#           - Exact: [1024, 385, 1, 1024]
#           - Exact: [1024, 385, 1, 30522]
#           - Exact: [1024, 2560, 1, 2]
#           - Exact: [1024, 2560, 1, 1024]
#           - Exact: [1024, 2560, 1, 4096]
#           - Exact: [4096, 2560, 1, 1024]
#           - Exact: {sizes: [64, 512, 96, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 6, 1, 2]
#           - Exact: [1024, 6, 1, 1024]
#           - Exact: [1024, 462, 1, 1024]
#           - Exact: [1024, 462, 1, 30522]
#           - Exact: [1024, 3072, 1, 2]
#           - Exact: [1024, 3072, 1, 1024]
#           - Exact: [1024, 3072, 1, 4096]
#           - Exact: [4096, 3072, 1, 1024]
#           - Exact: [1024, 8, 1, 2]
#           - Exact: [1024, 160, 1, 30522]
#           - Exact: {sizes: [64, 128, 144, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 9, 1, 2]
#           - Exact: [1024, 9, 1, 1024]
#           - Exact: [1024, 180, 1, 1024]
#           - Exact: [1024, 180, 1, 30522]
#           - Exact: [1024, 1152, 1, 2]
#           - Exact: [1024, 1152, 1, 1024]
#           - Exact: [1024, 1152, 1, 4096]
#           - Exact: [4096, 1152, 1, 1024]
#           - Exact: [256, 32768, 1, 128]
#           - Exact: [479, 32768, 1, 1024]
#           - Exact: [512, 32768, 1, 256]
#           - Exact: [1024, 32768, 1, 512]
#           - Exact: [1024, 32768, 1, 1024]
#           - Exact: {sizes: [64, 128, 512, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: {sizes: [128, 128, 512, 64], stridesA: [-1, 128, 8192], stridesB: [-1, 64, 8192], stridesC: [-1, 128, 8192], stridesD: [-1, 128, 8192] }
#           - Exact: [1024, 32, 1, 2]
#           - Exact: [1024, 32, 1, 1024]
#           - Exact: [1024, 4096, 1, 30528]
#           - Exact: {sizes: [512, 512, 64, 64], stridesA: [-1, 512, 32768], stridesB: [-1, 64, 32768], stridesC: [-1, 512, 262144], stridesD: [-1, 512, 262144] }
#           - Exact: [1024, 2048, 1, 30528]
#           - Exact: {sizes: [64, 4, 32768, 4], stridesA: [-1, 2097152, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
#           - Exact: {sizes: [64, 4, 38400, 4], stridesA: [-1, 2457600, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
#           - Exact: [1024, 8192, 1, 1024]
#           - Exact: [1024, 8192, 1, 4096]
#           - Exact: [1024, 8192, 1, 33712]
#           - Exact: [1024, 9600, 1, 1024]
#           - Exact: [1024, 9600, 1, 4096]
#           - Exact: [1024, 9600, 1, 33712]
#           - Exact: [4096, 8192, 1, 1024]
#           - Exact: [4096, 9600, 1, 1024]
#           - Exact: [1024, 10064, 1, 1024]
#           - Exact: [1024, 10064, 1, 4096]
#           - Exact: [1024, 10080, 1, 1024]
#           - Exact: [1024, 10080, 1, 4096]
#           - Exact: [1024, 10080, 1, 42720]
#           - Exact: [1024, 10200, 1, 1024]
#           - Exact: [1024, 10200, 1, 4096]
#           - Exact: [1024, 3840, 1, 1024]
#           - Exact: [1024, 3840, 1, 4096]
#           - Exact: [1024, 3968, 1, 1024]
#           - Exact: [1024, 3968, 1, 4096]
#           - Exact: [1024, 3968, 1, 42720]
#           - Exact: [1024, 6528, 1, 1024]
#           - Exact: [1024, 6528, 1, 4096]
#           - Exact: [1024, 6528, 1, 42720]
#           - Exact: [1024, 7104, 1, 1024]
#           - Exact: [1024, 7104, 1, 4096]
#           - Exact: [1024, 7104, 1, 42720]
#           - Exact: [1024, 7200, 1, 1024]
#           - Exact: [1024, 7200, 1, 4096]
#           - Exact: [1024, 7200, 1, 42720]
#           - Exact: [1024, 8064, 1, 1024]
#           - Exact: [1024, 8064, 1, 4096]
#           - Exact: [1024, 8160, 1, 1024]
#           - Exact: [1024, 8160, 1, 4096]
#           - Exact: [1024, 9216, 1, 1024]
#           - Exact: [1024, 9216, 1, 4096]
#           - Exact: [1024, 9520, 1, 1024]
#           - Exact: [1024, 9520, 1, 4096]
#           - Exact: [1024, 9520, 1, 42720]
#           - Exact: [4096, 10064, 1, 1024]
#           - Exact: [4096, 10080, 1, 1024]
#           - Exact: [4096, 10200, 1, 1024]
#           - Exact: [4096, 3840, 1, 1024]
#           - Exact: [4096, 3968, 1, 1024]
#           - Exact: [4096, 6528, 1, 1024]
#           - Exact: [4096, 7104, 1, 1024]
#           - Exact: [4096, 7200, 1, 1024]
#           - Exact: [4096, 8064, 1, 1024]
#           - Exact: [4096, 8160, 1, 1024]
#           - Exact: [4096, 9216, 1, 1024]
#           - Exact: [4096, 9520, 1, 1024]

# #
#           - Exact: {sizes: [64, 14, 10880, 14], stridesA: [-1, 696320, 64], stridesB: [-1, 14, 196], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
#           - Exact: {sizes: [64, 14, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 210], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
#           - Exact: {sizes: [64, 15, 7680, 15], stridesA: [-1, 491520, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 15, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 15, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 255], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 17, 6144, 17], stridesA: [-1, 393216, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 17, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 17, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 357], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 21, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 441], stridesC: [-1, 64, 1344], stridesD: [-1, 64, 1344] }
#           - Exact: {sizes: [64, 24, 4736, 24], stridesA: [-1, 303104, 64], stridesB: [-1, 24, 576], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
#           - Exact: {sizes: [64, 24, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 816], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
#           - Exact: {sizes: [64, 30, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 900], stridesC: [-1, 64, 1920], stridesD: [-1, 64, 1920] }
#           - Exact: {sizes: [64, 31, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 930], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
#           - Exact: {sizes: [64, 31, 2048, 31], stridesA: [-1, 131072, 64], stridesB: [-1, 31, 961], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
#           - Exact: {sizes: [64, 32, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1024], stridesC: [-1, 64, 2048], stridesD: [-1, 64, 2048] }
#           - Exact: {sizes: [64, 34, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 1156], stridesC: [-1, 64, 2176], stridesD: [-1, 64, 2176] }
#           - Exact: {sizes: [64, 35, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1120], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }
#           - Exact: {sizes: [64, 35, 4608, 35], stridesA: [-1, 294912, 64], stridesB: [-1, 35, 1225], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }

#           - Exact: [1024, 2048, 1, 1024]
#           - Exact: [64, 512, 1, 512]
#           - Exact: [1024, 2048, 1, 2]
#           - Exact: [4096, 2048, 1, 1024]
#           - Exact: [1024, 2048, 1, 4096]
#           - Exact: [512, 512, 1, 64]
#           - Exact: [1024, 1024, 1, 4096]
#           - Exact: [128, 128, 1, 64]
#           - Exact: [64, 128, 1, 128]
#           - Exact: [4096, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 2]
#           - Exact: [1024, 512, 1, 1024]
#           - Exact: [1024, 512, 1, 64]
#           - Exact: [74, 512, 1, 2048]
#           - Exact: [64, 5, 1, 5]
#           - Exact: [2048, 512, 1, 2048]
#           - Exact: [512, 1600, 1, 512]
#           - Exact: [32, 33, 1, 33]
#           - Exact: [560, 1600, 1, 1024]
#           - Exact: [512, 1600, 1, 32]
#           - Exact: [1024, 1600, 1, 1024]

#     - # BenchmarkProblemSizeGroup - Standard
#       InitialSolutionParameters:
#       BenchmarkCommonParameters:
#         - KernelLanguage: ["Assembly"]
#         - EdgeType: ["ShiftPtr"]
#       ForkParameters:
#         - PersistentKernel: [1,2,4,8,64,120]
#         - PersistentKernelAlongBatch: [False]
#         - MatrixInstruction:
#           - [32, 32, 4, 2,  2,  1,1,  1]
#           - [32, 32, 4, 2,  2,  1,1,  2]
#           - [32, 32, 4, 2,  2,  2,1,  1]
#           - [32, 32, 4, 2,  2,  2,2,  1]
#           - [32, 32, 4, 2,  2,  2,2,  2]
#           - [32, 32, 8, 1,  1,  1,1,  2]
#           - [32, 32, 8, 1,  1,  1,2,  2]
#           - [32, 32, 8, 1,  1,  2,1,  2]
#           - [32, 32, 8, 1,  1,  2,2,  2]
#           - [32, 32, 8, 1,  1,  2,4,  2]
#           - [32, 32, 8, 1,  1,  4,2,  2]
#           - [16, 16, 16, 1,  1,  1,1,  2]
#           - [16, 16, 16, 1,  1,  1,2,  2]
#           - [16, 16, 16, 1,  1,  2,1,  2]
#           # - [32, 32, 4, 2]
#           # - [32, 32, 8, 1]
#           # - [16, 16, 16, 1]
#         - ThreadTile:
#           - [ 1, 32 ]
#           # - [ 2, 16 ]
#         - WorkGroup:
#           - [ 64, 4, 1 ]
#           # - [ 32, 8, 1 ]
#         - AssertSummationElementMultiple: [1]
#         - AssertFree0ElementMultiple: [1,4]
#         - AssertFree1ElementMultiple: [1]
#         - PrefetchGlobalRead: [1]
#         - PrefetchLocalRead: [1]
#         - DepthU: [32,64,128]
#         # - DepthU: [32,64]
#         - VectorWidth: [2]
#         - GlobalReadVectorWidth: [2,4,8]
#         # - GlobalReadVectorWidth: [2,8]
#         # - LocalReadVectorWidth: [8]
#         - SuppressNoLoadLoop: [0]
#         - OptNoLoadLoop: [1]
#         - ScheduleLocalWrite: [1]
#         - ScheduleGlobalRead: [1]
#         - ScheduleIterAlg: [3]
#         - InnerUnroll: [1]
#         - ExpandPointerSwap: [1]
#         - TransposeLDS: [1]
#         - LdsBlockSizePerPad: [-1]
#         - LdsPadA: [-1]
#         - LdsPadB: [-1]
#         - StoreRemapVectorWidth: [0,4]
#         # - StaggerUMapping: [0,3]  # Ethan
#         # - StaggerUStride: [128,256]  # Ethan
#         # - StaggerU: [0,16,32]  # Ethan
#         # - WorkGroupMapping: [1,2,15]  # Ethan
#         - WorkGroupMapping: [1]  # Ethan
#         - WaveSeparateGlobalReadA: [1]  # Ethan
#         - WaveSeparateGlobalReadB: [1]  # Ethan
#         # - 1LDSBuffer: [-1]
#       BenchmarkJoinParameters:
#       BenchmarkFinalParameters:
#         - ProblemSizes:
#           - Exact: [7680, 8192, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [3840, 4096, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [1920, 2048, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [960, 1024, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [480, 512, 1, 512, 544, 544, 544, 544]
#           - Exact: [8192, 7680, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [4096, 3840, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [2048, 1920, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [1024, 960, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [512, 480, 1, 512, 544, 544, 544, 544]
#           - Exact: [8192, 8192, 1, 8192, 8384, 8384, 8384, 8384]
#           - Exact: [4096, 4096, 1, 4096, 4192, 4192, 4192, 4192]
#           - Exact: [2048, 2048, 1, 2048, 2080, 2080, 2080, 2080]
#           - Exact: [1024, 1024, 1, 1024, 1056, 1056, 1056, 1056]
#           - Exact: [512, 512, 1, 512, 544, 544, 544, 544]
#           - Exact: {sizes: [64, 512, 16, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: {sizes: [64, 512, 128, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 1, 1, 2]
#           - Exact: [1024, 1, 1, 1024]
#           - Exact: [1024, 8, 1, 1024]
#           - Exact: [1024, 77, 1, 1024]
#           - Exact: [1024, 77, 1, 30522]
#           - Exact: [1024, 512, 1, 2]
#           - Exact: [1024, 512, 1, 1024]
#           - Exact: [1024, 512, 1, 4096]
#           - Exact: [1024, 616, 1, 1024]
#           - Exact: [1024, 4096, 1, 2]
#           - Exact: [1024, 4096, 1, 1024]
#           - Exact: [1024, 4096, 1, 4096]
#           - Exact: [4096, 512, 1, 1024]
#           - Exact: [4096, 4096, 1, 1024]
#           - Exact: {sizes: [64, 128, 128, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: {sizes: [64, 128, 160, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 10, 1, 2]
#           - Exact: [1024, 10, 1, 1024]
#           - Exact: [1024, 160, 1, 1024]
#           - Exact: [1024, 200, 1, 1024]
#           - Exact: [1024, 200, 1, 30522]
#           - Exact: [1024, 1024, 1, 2]
#           - Exact: [1024, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 4096]
#           - Exact: [1024, 1280, 1, 2]
#           - Exact: [1024, 1280, 1, 1024]
#           - Exact: [1024, 1280, 1, 4096]
#           - Exact: [4096, 1024, 1, 1024]
#           - Exact: [4096, 1280, 1, 1024]
#           - Exact: {sizes: [64, 128, 624, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 39, 1, 2]
#           - Exact: [1024, 39, 1, 1024]
#           - Exact: [1024, 780, 1, 1024]
#           - Exact: [1024, 780, 1, 30522]
#           - Exact: [1024, 4992, 1, 2]
#           - Exact: [1024, 4992, 1, 1024]
#           - Exact: [1024, 4992, 1, 4096]
#           - Exact: [4096, 4992, 1, 1024]
#           - Exact: {sizes: [64, 512, 64, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 4, 1, 2]
#           - Exact: [1024, 4, 1, 1024]
#           - Exact: [1024, 308, 1, 1024]
#           - Exact: [1024, 308, 1, 30522]
#           - Exact: [1024, 2048, 1, 2]
#           - Exact: [1024, 2048, 1, 1024]
#           - Exact: [1024, 2048, 1, 4096]
#           - Exact: [4096, 2048, 1, 1024]
#           - Exact: {sizes: [64, 128, 640, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 40, 1, 2]
#           - Exact: [1024, 40, 1, 1024]
#           - Exact: [1024, 800, 1, 1024]
#           - Exact: [1024, 800, 1, 30522]
#           - Exact: [1024, 5120, 1, 2]
#           - Exact: [1024, 5120, 1, 1024]
#           - Exact: [1024, 5120, 1, 4096]
#           - Exact: [4096, 5120, 1, 1024]
#           - Exact: {sizes: [64, 128, 656, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 41, 1, 2]
#           - Exact: [1024, 41, 1, 1024]
#           - Exact: [1024, 820, 1, 1024]
#           - Exact: [1024, 820, 1, 30522]
#           - Exact: [1024, 5248, 1, 2]
#           - Exact: [1024, 5248, 1, 1024]
#           - Exact: [1024, 5248, 1, 4096]
#           - Exact: [4096, 5248, 1, 1024]
#           - Exact: {sizes: [64, 512, 80, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 5, 1, 2]
#           - Exact: [1024, 5, 1, 1024]
#           - Exact: [1024, 385, 1, 1024]
#           - Exact: [1024, 385, 1, 30522]
#           - Exact: [1024, 2560, 1, 2]
#           - Exact: [1024, 2560, 1, 1024]
#           - Exact: [1024, 2560, 1, 4096]
#           - Exact: [4096, 2560, 1, 1024]
#           - Exact: {sizes: [64, 512, 96, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
#           - Exact: [1024, 6, 1, 2]
#           - Exact: [1024, 6, 1, 1024]
#           - Exact: [1024, 462, 1, 1024]
#           - Exact: [1024, 462, 1, 30522]
#           - Exact: [1024, 3072, 1, 2]
#           - Exact: [1024, 3072, 1, 1024]
#           - Exact: [1024, 3072, 1, 4096]
#           - Exact: [4096, 3072, 1, 1024]
#           - Exact: [1024, 8, 1, 2]
#           - Exact: [1024, 160, 1, 30522]
#           - Exact: {sizes: [64, 128, 144, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: [1024, 9, 1, 2]
#           - Exact: [1024, 9, 1, 1024]
#           - Exact: [1024, 180, 1, 1024]
#           - Exact: [1024, 180, 1, 30522]
#           - Exact: [1024, 1152, 1, 2]
#           - Exact: [1024, 1152, 1, 1024]
#           - Exact: [1024, 1152, 1, 4096]
#           - Exact: [4096, 1152, 1, 1024]
#           - Exact: [256, 32768, 1, 128]
#           - Exact: [479, 32768, 1, 1024]
#           - Exact: [512, 32768, 1, 256]
#           - Exact: [1024, 32768, 1, 512]
#           - Exact: [1024, 32768, 1, 1024]
#           - Exact: {sizes: [64, 128, 512, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
#           - Exact: {sizes: [128, 128, 512, 64], stridesA: [-1, 128, 8192], stridesB: [-1, 64, 8192], stridesC: [-1, 128, 8192], stridesD: [-1, 128, 8192] }
#           - Exact: [1024, 32, 1, 2]
#           - Exact: [1024, 32, 1, 1024]
#           - Exact: [1024, 4096, 1, 30528]
#           - Exact: {sizes: [512, 512, 64, 64], stridesA: [-1, 512, 32768], stridesB: [-1, 64, 32768], stridesC: [-1, 512, 262144], stridesD: [-1, 512, 262144] }
#           - Exact: [1024, 2048, 1, 30528]
#           - Exact: {sizes: [64, 4, 32768, 4], stridesA: [-1, 2097152, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
#           - Exact: {sizes: [64, 4, 38400, 4], stridesA: [-1, 2457600, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
#           - Exact: [1024, 8192, 1, 1024]
#           - Exact: [1024, 8192, 1, 4096]
#           - Exact: [1024, 8192, 1, 33712]
#           - Exact: [1024, 9600, 1, 1024]
#           - Exact: [1024, 9600, 1, 4096]
#           - Exact: [1024, 9600, 1, 33712]
#           - Exact: [4096, 8192, 1, 1024]
#           - Exact: [4096, 9600, 1, 1024]
#           - Exact: [1024, 10064, 1, 1024]
#           - Exact: [1024, 10064, 1, 4096]
#           - Exact: [1024, 10080, 1, 1024]
#           - Exact: [1024, 10080, 1, 4096]
#           - Exact: [1024, 10080, 1, 42720]
#           - Exact: [1024, 10200, 1, 1024]
#           - Exact: [1024, 10200, 1, 4096]
#           - Exact: [1024, 3840, 1, 1024]
#           - Exact: [1024, 3840, 1, 4096]
#           - Exact: [1024, 3968, 1, 1024]
#           - Exact: [1024, 3968, 1, 4096]
#           - Exact: [1024, 3968, 1, 42720]
#           - Exact: [1024, 6528, 1, 1024]
#           - Exact: [1024, 6528, 1, 4096]
#           - Exact: [1024, 6528, 1, 42720]
#           - Exact: [1024, 7104, 1, 1024]
#           - Exact: [1024, 7104, 1, 4096]
#           - Exact: [1024, 7104, 1, 42720]
#           - Exact: [1024, 7200, 1, 1024]
#           - Exact: [1024, 7200, 1, 4096]
#           - Exact: [1024, 7200, 1, 42720]
#           - Exact: [1024, 8064, 1, 1024]
#           - Exact: [1024, 8064, 1, 4096]
#           - Exact: [1024, 8160, 1, 1024]
#           - Exact: [1024, 8160, 1, 4096]
#           - Exact: [1024, 9216, 1, 1024]
#           - Exact: [1024, 9216, 1, 4096]
#           - Exact: [1024, 9520, 1, 1024]
#           - Exact: [1024, 9520, 1, 4096]
#           - Exact: [1024, 9520, 1, 42720]
#           - Exact: [4096, 10064, 1, 1024]
#           - Exact: [4096, 10080, 1, 1024]
#           - Exact: [4096, 10200, 1, 1024]
#           - Exact: [4096, 3840, 1, 1024]
#           - Exact: [4096, 3968, 1, 1024]
#           - Exact: [4096, 6528, 1, 1024]
#           - Exact: [4096, 7104, 1, 1024]
#           - Exact: [4096, 7200, 1, 1024]
#           - Exact: [4096, 8064, 1, 1024]
#           - Exact: [4096, 8160, 1, 1024]
#           - Exact: [4096, 9216, 1, 1024]
#           - Exact: [4096, 9520, 1, 1024]

# #
#           - Exact: {sizes: [64, 14, 10880, 14], stridesA: [-1, 696320, 64], stridesB: [-1, 14, 196], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
#           - Exact: {sizes: [64, 14, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 210], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
#           - Exact: {sizes: [64, 15, 7680, 15], stridesA: [-1, 491520, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 15, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 15, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 255], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
#           - Exact: {sizes: [64, 17, 6144, 17], stridesA: [-1, 393216, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 17, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 17, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 357], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
#           - Exact: {sizes: [64, 21, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 441], stridesC: [-1, 64, 1344], stridesD: [-1, 64, 1344] }
#           - Exact: {sizes: [64, 24, 4736, 24], stridesA: [-1, 303104, 64], stridesB: [-1, 24, 576], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
#           - Exact: {sizes: [64, 24, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 816], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
#           - Exact: {sizes: [64, 30, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 900], stridesC: [-1, 64, 1920], stridesD: [-1, 64, 1920] }
#           - Exact: {sizes: [64, 31, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 930], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
#           - Exact: {sizes: [64, 31, 2048, 31], stridesA: [-1, 131072, 64], stridesB: [-1, 31, 961], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
#           - Exact: {sizes: [64, 32, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1024], stridesC: [-1, 64, 2048], stridesD: [-1, 64, 2048] }
#           - Exact: {sizes: [64, 34, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 1156], stridesC: [-1, 64, 2176], stridesD: [-1, 64, 2176] }
#           - Exact: {sizes: [64, 35, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1120], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }
#           - Exact: {sizes: [64, 35, 4608, 35], stridesA: [-1, 294912, 64], stridesB: [-1, 35, 1225], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }

#           - Exact: [1024, 2048, 1, 1024]
#           - Exact: [64, 512, 1, 512]
#           - Exact: [1024, 2048, 1, 2]
#           - Exact: [4096, 2048, 1, 1024]
#           - Exact: [1024, 2048, 1, 4096]
#           - Exact: [512, 512, 1, 64]
#           - Exact: [1024, 1024, 1, 4096]
#           - Exact: [128, 128, 1, 64]
#           - Exact: [64, 128, 1, 128]
#           - Exact: [4096, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 1024]
#           - Exact: [1024, 1024, 1, 2]
#           - Exact: [1024, 512, 1, 1024]
#           - Exact: [1024, 512, 1, 64]
#           - Exact: [74, 512, 1, 2048]
#           - Exact: [64, 5, 1, 5]
#           - Exact: [2048, 512, 1, 2048]
#           - Exact: [512, 1600, 1, 512]
#           - Exact: [32, 33, 1, 33]
#           - Exact: [560, 1600, 1, 1024]
#           - Exact: [512, 1600, 1, 32]
#           - Exact: [1024, 1600, 1, 1024]

    - # BenchmarkProblemSizeGroup - Standard
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        # - PersistentKernel: [1,2,4,8,64,120]
        # - PersistentKernelAlongBatch: [True]
        - MatrixInstruction:
          - [32, 32, 4, 2,  2,  1,1,  1]
          - [32, 32, 4, 2,  2,  1,1,  2]
          - [32, 32, 4, 2,  2,  2,1,  1]
          - [32, 32, 4, 2,  2,  2,2,  1]
          - [32, 32, 4, 2,  2,  2,2,  2]
          - [32, 32, 8, 1,  1,  1,1,  2]
          - [32, 32, 8, 1,  1,  1,2,  2]
          - [32, 32, 8, 1,  1,  2,1,  2]
          - [32, 32, 8, 1,  1,  2,2,  2]
          - [32, 32, 8, 1,  1,  2,4,  2]
          - [32, 32, 8, 1,  1,  4,2,  2]
          - [16, 16, 16, 1,  1,  1,1,  2]
          - [16, 16, 16, 1,  1,  1,2,  2]
          - [16, 16, 16, 1,  1,  2,1,  2]
          # - [32, 32, 4, 2]
          # - [32, 32, 8, 1]
          # - [16, 16, 16, 1]
        - ThreadTile:
          - [ 1, 32 ]
          # - [ 2, 16 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
          # - [ 32, 8, 1 ]
        - AssertSummationElementMultiple: [1]
        - AssertFree0ElementMultiple: [1,4]
        - AssertFree1ElementMultiple: [1]
        - PrefetchGlobalRead: [1]
        - PrefetchLocalRead: [1]
        - DepthU: [32,64,128]
        # - DepthU: [32,64]
        - VectorWidth: [2]
        - GlobalReadVectorWidth: [2,4,8]
        # - GlobalReadVectorWidth: [2,8]
        # - LocalReadVectorWidth: [8]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [0,4]
        # - StaggerUMapping: [0,3]  # Ethan
        # - StaggerUStride: [128,256]  # Ethan
        # - StaggerU: [0,16,32]  # Ethan
        # - WorkGroupMapping: [1,2,15]  # Ethan
        - WorkGroupMapping: [1]  # Ethan
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        # - 1LDSBuffer: [-1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # - Exact: [7680, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [3840, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [1920, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [960, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [480, 512, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 7680, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 3840, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 1920, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 960, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 480, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 512, 1, 512, 544, 544, 544, 544]
          - Exact: {sizes: [64, 512, 16, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          - Exact: {sizes: [64, 512, 128, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 1, 1, 2]
          # - Exact: [1024, 1, 1, 1024]
          # - Exact: [1024, 8, 1, 1024]
          # - Exact: [1024, 77, 1, 1024]
          # - Exact: [1024, 77, 1, 30522]
          - Exact: [1024, 512, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          # - Exact: [1024, 512, 1, 4096]
          # - Exact: [1024, 616, 1, 1024]
          - Exact: [1024, 4096, 1, 2]
          # - Exact: [1024, 4096, 1, 1024]
          # - Exact: [1024, 4096, 1, 4096]
          # - Exact: [4096, 512, 1, 1024]
          # - Exact: [4096, 4096, 1, 1024]
          - Exact: {sizes: [64, 128, 128, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [64, 128, 160, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 10, 1, 2]
          # - Exact: [1024, 10, 1, 1024]
          # - Exact: [1024, 160, 1, 1024]
          # - Exact: [1024, 200, 1, 1024]
          # - Exact: [1024, 200, 1, 30522]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [1024, 1280, 1, 2]
          # - Exact: [1024, 1280, 1, 1024]
          # - Exact: [1024, 1280, 1, 4096]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [4096, 1280, 1, 1024]
          - Exact: {sizes: [64, 128, 624, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 39, 1, 2]
          # - Exact: [1024, 39, 1, 1024]
          # - Exact: [1024, 780, 1, 1024]
          # - Exact: [1024, 780, 1, 30522]
          # - Exact: [1024, 4992, 1, 2]
          # - Exact: [1024, 4992, 1, 1024]
          # - Exact: [1024, 4992, 1, 4096]
          # - Exact: [4096, 4992, 1, 1024]
          - Exact: {sizes: [64, 512, 64, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 4, 1, 2]
          # - Exact: [1024, 4, 1, 1024]
          # - Exact: [1024, 308, 1, 1024]
          # - Exact: [1024, 308, 1, 30522]
          # - Exact: [1024, 2048, 1, 2]
          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          # - Exact: [4096, 2048, 1, 1024]
          - Exact: {sizes: [64, 128, 640, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 40, 1, 2]
          # - Exact: [1024, 40, 1, 1024]
          # - Exact: [1024, 800, 1, 1024]
          # - Exact: [1024, 800, 1, 30522]
          # - Exact: [1024, 5120, 1, 2]
          # - Exact: [1024, 5120, 1, 1024]
          # - Exact: [1024, 5120, 1, 4096]
          # - Exact: [4096, 5120, 1, 1024]
          - Exact: {sizes: [64, 128, 656, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 41, 1, 2]
          # - Exact: [1024, 41, 1, 1024]
          # - Exact: [1024, 820, 1, 1024]
          # - Exact: [1024, 820, 1, 30522]
          # - Exact: [1024, 5248, 1, 2]
          # - Exact: [1024, 5248, 1, 1024]
          # - Exact: [1024, 5248, 1, 4096]
          # - Exact: [4096, 5248, 1, 1024]
          - Exact: {sizes: [64, 512, 80, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 5, 1, 2]
          # - Exact: [1024, 5, 1, 1024]
          # - Exact: [1024, 385, 1, 1024]
          # - Exact: [1024, 385, 1, 30522]
          # - Exact: [1024, 2560, 1, 2]
          # - Exact: [1024, 2560, 1, 1024]
          # - Exact: [1024, 2560, 1, 4096]
          # - Exact: [4096, 2560, 1, 1024]
          - Exact: {sizes: [64, 512, 96, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 6, 1, 2]
          # - Exact: [1024, 6, 1, 1024]
          # - Exact: [1024, 462, 1, 1024]
          # - Exact: [1024, 462, 1, 30522]
          # - Exact: [1024, 3072, 1, 2]
          # - Exact: [1024, 3072, 1, 1024]
          # - Exact: [1024, 3072, 1, 4096]
          # - Exact: [4096, 3072, 1, 1024]
          # - Exact: [1024, 8, 1, 2]
          # - Exact: [1024, 160, 1, 30522]
          - Exact: {sizes: [64, 128, 144, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 9, 1, 2]
          # - Exact: [1024, 9, 1, 1024]
          # - Exact: [1024, 180, 1, 1024]
          # - Exact: [1024, 180, 1, 30522]
          - Exact: [1024, 1152, 1, 2]
          # - Exact: [1024, 1152, 1, 1024]
          # - Exact: [1024, 1152, 1, 4096]
          # - Exact: [4096, 1152, 1, 1024]
          # - Exact: [256, 32768, 1, 128]
          # - Exact: [479, 32768, 1, 1024]
          # - Exact: [512, 32768, 1, 256]
          # - Exact: [1024, 32768, 1, 512]
          # - Exact: [1024, 32768, 1, 1024]
          - Exact: {sizes: [64, 128, 512, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [128, 128, 512, 64], stridesA: [-1, 128, 8192], stridesB: [-1, 64, 8192], stridesC: [-1, 128, 8192], stridesD: [-1, 128, 8192] }
          - Exact: [1024, 32, 1, 2]
          # - Exact: [1024, 32, 1, 1024]
          # - Exact: [1024, 4096, 1, 30528]
          - Exact: {sizes: [512, 512, 64, 64], stridesA: [-1, 512, 32768], stridesB: [-1, 64, 32768], stridesC: [-1, 512, 262144], stridesD: [-1, 512, 262144] }
          # - Exact: [1024, 2048, 1, 30528]
          - Exact: {sizes: [64, 4, 32768, 4], stridesA: [-1, 2097152, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          - Exact: {sizes: [64, 4, 38400, 4], stridesA: [-1, 2457600, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          # - Exact: [1024, 8192, 1, 1024]
          # - Exact: [1024, 8192, 1, 4096]
          # - Exact: [1024, 8192, 1, 33712]
          # - Exact: [1024, 9600, 1, 1024]
          # - Exact: [1024, 9600, 1, 4096]
          # - Exact: [1024, 9600, 1, 33712]
          # - Exact: [4096, 8192, 1, 1024]
          # - Exact: [4096, 9600, 1, 1024]
          # - Exact: [1024, 10064, 1, 1024]
          # - Exact: [1024, 10064, 1, 4096]
          # - Exact: [1024, 10080, 1, 1024]
          # - Exact: [1024, 10080, 1, 4096]
          # - Exact: [1024, 10080, 1, 42720]
          # - Exact: [1024, 10200, 1, 1024]
          # - Exact: [1024, 10200, 1, 4096]
          # - Exact: [1024, 3840, 1, 1024]
          # - Exact: [1024, 3840, 1, 4096]
          # - Exact: [1024, 3968, 1, 1024]
          # - Exact: [1024, 3968, 1, 4096]
          # - Exact: [1024, 3968, 1, 42720]
          # - Exact: [1024, 6528, 1, 1024]
          # - Exact: [1024, 6528, 1, 4096]
          # - Exact: [1024, 6528, 1, 42720]
          # - Exact: [1024, 7104, 1, 1024]
          # - Exact: [1024, 7104, 1, 4096]
          # - Exact: [1024, 7104, 1, 42720]
          # - Exact: [1024, 7200, 1, 1024]
          # - Exact: [1024, 7200, 1, 4096]
          # - Exact: [1024, 7200, 1, 42720]
          # - Exact: [1024, 8064, 1, 1024]
          # - Exact: [1024, 8064, 1, 4096]
          # - Exact: [1024, 8160, 1, 1024]
          # - Exact: [1024, 8160, 1, 4096]
          # - Exact: [1024, 9216, 1, 1024]
          # - Exact: [1024, 9216, 1, 4096]
          # - Exact: [1024, 9520, 1, 1024]
          # - Exact: [1024, 9520, 1, 4096]
          # - Exact: [1024, 9520, 1, 42720]
          # - Exact: [4096, 10064, 1, 1024]
          # - Exact: [4096, 10080, 1, 1024]
          # - Exact: [4096, 10200, 1, 1024]
          # - Exact: [4096, 3840, 1, 1024]
          # - Exact: [4096, 3968, 1, 1024]
          # - Exact: [4096, 6528, 1, 1024]
          # - Exact: [4096, 7104, 1, 1024]
          # - Exact: [4096, 7200, 1, 1024]
          # - Exact: [4096, 8064, 1, 1024]
          # - Exact: [4096, 8160, 1, 1024]
          # - Exact: [4096, 9216, 1, 1024]
          # - Exact: [4096, 9520, 1, 1024]

#
          - Exact: {sizes: [64, 14, 10880, 14], stridesA: [-1, 696320, 64], stridesB: [-1, 14, 196], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 14, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 210], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 15, 7680, 15], stridesA: [-1, 491520, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 255], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 17, 6144, 17], stridesA: [-1, 393216, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 357], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 21, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 441], stridesC: [-1, 64, 1344], stridesD: [-1, 64, 1344] }
          - Exact: {sizes: [64, 24, 4736, 24], stridesA: [-1, 303104, 64], stridesB: [-1, 24, 576], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 24, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 816], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 30, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 900], stridesC: [-1, 64, 1920], stridesD: [-1, 64, 1920] }
          - Exact: {sizes: [64, 31, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 930], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 31, 2048, 31], stridesA: [-1, 131072, 64], stridesB: [-1, 31, 961], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 32, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1024], stridesC: [-1, 64, 2048], stridesD: [-1, 64, 2048] }
          - Exact: {sizes: [64, 34, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 1156], stridesC: [-1, 64, 2176], stridesD: [-1, 64, 2176] }
          - Exact: {sizes: [64, 35, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1120], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }
          - Exact: {sizes: [64, 35, 4608, 35], stridesA: [-1, 294912, 64], stridesB: [-1, 35, 1225], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }

          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [64, 512, 1, 512]
          - Exact: [1024, 2048, 1, 2]
          # - Exact: [4096, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          - Exact: [512, 512, 1, 64]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [128, 128, 1, 64]
          # - Exact: [64, 128, 1, 128]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 1024]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          - Exact: [1024, 512, 1, 64]
          # - Exact: [74, 512, 1, 2048]
          - Exact: [64, 5, 1, 5]
          # - Exact: [2048, 512, 1, 2048]
          # - Exact: [512, 1600, 1, 512]
          - Exact: [32, 33, 1, 33]
          # - Exact: [560, 1600, 1, 1024]
          - Exact: [512, 1600, 1, 32]
          # - Exact: [1024, 1600, 1, 1024]

    - # BenchmarkProblemSizeGroup - Standard
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - PersistentKernel: [1,2,4,8,64,120]
        - PersistentKernelAlongBatch: [False]
        - MatrixInstruction:
          - [32, 32, 4, 2,  2,  1,1,  1]
          - [32, 32, 4, 2,  2,  1,1,  2]
          - [32, 32, 4, 2,  2,  2,1,  1]
          - [32, 32, 4, 2,  2,  2,2,  1]
          - [32, 32, 4, 2,  2,  2,2,  2]
          - [32, 32, 8, 1,  1,  1,1,  2]
          - [32, 32, 8, 1,  1,  1,2,  2]
          - [32, 32, 8, 1,  1,  2,1,  2]
          - [32, 32, 8, 1,  1,  2,2,  2]
          - [32, 32, 8, 1,  1,  2,4,  2]
          - [32, 32, 8, 1,  1,  4,2,  2]
          - [16, 16, 16, 1,  1,  1,1,  2]
          - [16, 16, 16, 1,  1,  1,2,  2]
          - [16, 16, 16, 1,  1,  2,1,  2]
          # - [32, 32, 4, 2]
          # - [32, 32, 8, 1]
          # - [16, 16, 16, 1]
        - ThreadTile:
          - [ 1, 32 ]
          # - [ 2, 16 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
          # - [ 32, 8, 1 ]
        - AssertSummationElementMultiple: [1]
        - AssertFree0ElementMultiple: [1,4]
        - AssertFree1ElementMultiple: [1]
        - PrefetchGlobalRead: [1]
        - PrefetchLocalRead: [1]
        - DepthU: [32,64,128]
        # - DepthU: [32,64]
        - VectorWidth: [2]
        - GlobalReadVectorWidth: [2,4,8]
        # - GlobalReadVectorWidth: [2,8]
        # - LocalReadVectorWidth: [8]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [0,4]
        # - StaggerUMapping: [0,3]  # Ethan
        # - StaggerUStride: [128,256]  # Ethan
        # - StaggerU: [0,16,32]  # Ethan
        # - WorkGroupMapping: [1,2,15]  # Ethan
        - WorkGroupMapping: [1]  # Ethan
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        # - 1LDSBuffer: [-1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # - Exact: [7680, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [3840, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [1920, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [960, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [480, 512, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 7680, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 3840, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 1920, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 960, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 480, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 512, 1, 512, 544, 544, 544, 544]
          - Exact: {sizes: [64, 512, 16, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          - Exact: {sizes: [64, 512, 128, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 1, 1, 2]
          # - Exact: [1024, 1, 1, 1024]
          # - Exact: [1024, 8, 1, 1024]
          # - Exact: [1024, 77, 1, 1024]
          # - Exact: [1024, 77, 1, 30522]
          - Exact: [1024, 512, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          # - Exact: [1024, 512, 1, 4096]
          # - Exact: [1024, 616, 1, 1024]
          - Exact: [1024, 4096, 1, 2]
          # - Exact: [1024, 4096, 1, 1024]
          # - Exact: [1024, 4096, 1, 4096]
          # - Exact: [4096, 512, 1, 1024]
          # - Exact: [4096, 4096, 1, 1024]
          - Exact: {sizes: [64, 128, 128, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [64, 128, 160, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 10, 1, 2]
          # - Exact: [1024, 10, 1, 1024]
          # - Exact: [1024, 160, 1, 1024]
          # - Exact: [1024, 200, 1, 1024]
          # - Exact: [1024, 200, 1, 30522]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [1024, 1280, 1, 2]
          # - Exact: [1024, 1280, 1, 1024]
          # - Exact: [1024, 1280, 1, 4096]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [4096, 1280, 1, 1024]
          - Exact: {sizes: [64, 128, 624, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 39, 1, 2]
          # - Exact: [1024, 39, 1, 1024]
          # - Exact: [1024, 780, 1, 1024]
          # - Exact: [1024, 780, 1, 30522]
          # - Exact: [1024, 4992, 1, 2]
          # - Exact: [1024, 4992, 1, 1024]
          # - Exact: [1024, 4992, 1, 4096]
          # - Exact: [4096, 4992, 1, 1024]
          - Exact: {sizes: [64, 512, 64, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 4, 1, 2]
          # - Exact: [1024, 4, 1, 1024]
          # - Exact: [1024, 308, 1, 1024]
          # - Exact: [1024, 308, 1, 30522]
          # - Exact: [1024, 2048, 1, 2]
          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          # - Exact: [4096, 2048, 1, 1024]
          - Exact: {sizes: [64, 128, 640, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 40, 1, 2]
          # - Exact: [1024, 40, 1, 1024]
          # - Exact: [1024, 800, 1, 1024]
          # - Exact: [1024, 800, 1, 30522]
          # - Exact: [1024, 5120, 1, 2]
          # - Exact: [1024, 5120, 1, 1024]
          # - Exact: [1024, 5120, 1, 4096]
          # - Exact: [4096, 5120, 1, 1024]
          - Exact: {sizes: [64, 128, 656, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 41, 1, 2]
          # - Exact: [1024, 41, 1, 1024]
          # - Exact: [1024, 820, 1, 1024]
          # - Exact: [1024, 820, 1, 30522]
          # - Exact: [1024, 5248, 1, 2]
          # - Exact: [1024, 5248, 1, 1024]
          # - Exact: [1024, 5248, 1, 4096]
          # - Exact: [4096, 5248, 1, 1024]
          - Exact: {sizes: [64, 512, 80, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 5, 1, 2]
          # - Exact: [1024, 5, 1, 1024]
          # - Exact: [1024, 385, 1, 1024]
          # - Exact: [1024, 385, 1, 30522]
          # - Exact: [1024, 2560, 1, 2]
          # - Exact: [1024, 2560, 1, 1024]
          # - Exact: [1024, 2560, 1, 4096]
          # - Exact: [4096, 2560, 1, 1024]
          - Exact: {sizes: [64, 512, 96, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 6, 1, 2]
          # - Exact: [1024, 6, 1, 1024]
          # - Exact: [1024, 462, 1, 1024]
          # - Exact: [1024, 462, 1, 30522]
          # - Exact: [1024, 3072, 1, 2]
          # - Exact: [1024, 3072, 1, 1024]
          # - Exact: [1024, 3072, 1, 4096]
          # - Exact: [4096, 3072, 1, 1024]
          # - Exact: [1024, 8, 1, 2]
          # - Exact: [1024, 160, 1, 30522]
          - Exact: {sizes: [64, 128, 144, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 9, 1, 2]
          # - Exact: [1024, 9, 1, 1024]
          # - Exact: [1024, 180, 1, 1024]
          # - Exact: [1024, 180, 1, 30522]
          - Exact: [1024, 1152, 1, 2]
          # - Exact: [1024, 1152, 1, 1024]
          # - Exact: [1024, 1152, 1, 4096]
          # - Exact: [4096, 1152, 1, 1024]
          # - Exact: [256, 32768, 1, 128]
          # - Exact: [479, 32768, 1, 1024]
          # - Exact: [512, 32768, 1, 256]
          # - Exact: [1024, 32768, 1, 512]
          # - Exact: [1024, 32768, 1, 1024]
          - Exact: {sizes: [64, 128, 512, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [128, 128, 512, 64], stridesA: [-1, 128, 8192], stridesB: [-1, 64, 8192], stridesC: [-1, 128, 8192], stridesD: [-1, 128, 8192] }
          - Exact: [1024, 32, 1, 2]
          # - Exact: [1024, 32, 1, 1024]
          # - Exact: [1024, 4096, 1, 30528]
          - Exact: {sizes: [512, 512, 64, 64], stridesA: [-1, 512, 32768], stridesB: [-1, 64, 32768], stridesC: [-1, 512, 262144], stridesD: [-1, 512, 262144] }
          # - Exact: [1024, 2048, 1, 30528]
          - Exact: {sizes: [64, 4, 32768, 4], stridesA: [-1, 2097152, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          - Exact: {sizes: [64, 4, 38400, 4], stridesA: [-1, 2457600, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          # - Exact: [1024, 8192, 1, 1024]
          # - Exact: [1024, 8192, 1, 4096]
          # - Exact: [1024, 8192, 1, 33712]
          # - Exact: [1024, 9600, 1, 1024]
          # - Exact: [1024, 9600, 1, 4096]
          # - Exact: [1024, 9600, 1, 33712]
          # - Exact: [4096, 8192, 1, 1024]
          # - Exact: [4096, 9600, 1, 1024]
          # - Exact: [1024, 10064, 1, 1024]
          # - Exact: [1024, 10064, 1, 4096]
          # - Exact: [1024, 10080, 1, 1024]
          # - Exact: [1024, 10080, 1, 4096]
          # - Exact: [1024, 10080, 1, 42720]
          # - Exact: [1024, 10200, 1, 1024]
          # - Exact: [1024, 10200, 1, 4096]
          # - Exact: [1024, 3840, 1, 1024]
          # - Exact: [1024, 3840, 1, 4096]
          # - Exact: [1024, 3968, 1, 1024]
          # - Exact: [1024, 3968, 1, 4096]
          # - Exact: [1024, 3968, 1, 42720]
          # - Exact: [1024, 6528, 1, 1024]
          # - Exact: [1024, 6528, 1, 4096]
          # - Exact: [1024, 6528, 1, 42720]
          # - Exact: [1024, 7104, 1, 1024]
          # - Exact: [1024, 7104, 1, 4096]
          # - Exact: [1024, 7104, 1, 42720]
          # - Exact: [1024, 7200, 1, 1024]
          # - Exact: [1024, 7200, 1, 4096]
          # - Exact: [1024, 7200, 1, 42720]
          # - Exact: [1024, 8064, 1, 1024]
          # - Exact: [1024, 8064, 1, 4096]
          # - Exact: [1024, 8160, 1, 1024]
          # - Exact: [1024, 8160, 1, 4096]
          # - Exact: [1024, 9216, 1, 1024]
          # - Exact: [1024, 9216, 1, 4096]
          # - Exact: [1024, 9520, 1, 1024]
          # - Exact: [1024, 9520, 1, 4096]
          # - Exact: [1024, 9520, 1, 42720]
          # - Exact: [4096, 10064, 1, 1024]
          # - Exact: [4096, 10080, 1, 1024]
          # - Exact: [4096, 10200, 1, 1024]
          # - Exact: [4096, 3840, 1, 1024]
          # - Exact: [4096, 3968, 1, 1024]
          # - Exact: [4096, 6528, 1, 1024]
          # - Exact: [4096, 7104, 1, 1024]
          # - Exact: [4096, 7200, 1, 1024]
          # - Exact: [4096, 8064, 1, 1024]
          # - Exact: [4096, 8160, 1, 1024]
          # - Exact: [4096, 9216, 1, 1024]
          # - Exact: [4096, 9520, 1, 1024]

#
          - Exact: {sizes: [64, 14, 10880, 14], stridesA: [-1, 696320, 64], stridesB: [-1, 14, 196], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 14, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 210], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 15, 7680, 15], stridesA: [-1, 491520, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 255], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 17, 6144, 17], stridesA: [-1, 393216, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 357], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 21, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 441], stridesC: [-1, 64, 1344], stridesD: [-1, 64, 1344] }
          - Exact: {sizes: [64, 24, 4736, 24], stridesA: [-1, 303104, 64], stridesB: [-1, 24, 576], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 24, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 816], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 30, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 900], stridesC: [-1, 64, 1920], stridesD: [-1, 64, 1920] }
          - Exact: {sizes: [64, 31, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 930], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 31, 2048, 31], stridesA: [-1, 131072, 64], stridesB: [-1, 31, 961], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 32, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1024], stridesC: [-1, 64, 2048], stridesD: [-1, 64, 2048] }
          - Exact: {sizes: [64, 34, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 1156], stridesC: [-1, 64, 2176], stridesD: [-1, 64, 2176] }
          - Exact: {sizes: [64, 35, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1120], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }
          - Exact: {sizes: [64, 35, 4608, 35], stridesA: [-1, 294912, 64], stridesB: [-1, 35, 1225], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }

          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [64, 512, 1, 512]
          - Exact: [1024, 2048, 1, 2]
          # - Exact: [4096, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          - Exact: [512, 512, 1, 64]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [128, 128, 1, 64]
          # - Exact: [64, 128, 1, 128]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 1024]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          - Exact: [1024, 512, 1, 64]
          # - Exact: [74, 512, 1, 2048]
          - Exact: [64, 5, 1, 5]
          # - Exact: [2048, 512, 1, 2048]
          # - Exact: [512, 1600, 1, 512]
          - Exact: [32, 33, 1, 33]
          # - Exact: [560, 1600, 1, 1024]
          - Exact: [512, 1600, 1, 32]
          # - Exact: [1024, 1600, 1, 1024]

    - # BenchmarkProblemSizeGroup - Standard
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - PersistentKernel: [1,2,4,8,64,120]
        - PersistentKernelAlongBatch: [True]
        - MatrixInstruction:
          - [32, 32, 4, 2,  2,  1,1,  1]
          - [32, 32, 4, 2,  2,  1,1,  2]
          - [32, 32, 4, 2,  2,  2,1,  1]
          - [32, 32, 4, 2,  2,  2,2,  1]
          - [32, 32, 4, 2,  2,  2,2,  2]
          - [32, 32, 8, 1,  1,  1,1,  2]
          - [32, 32, 8, 1,  1,  1,2,  2]
          - [32, 32, 8, 1,  1,  2,1,  2]
          - [32, 32, 8, 1,  1,  2,2,  2]
          - [32, 32, 8, 1,  1,  2,4,  2]
          - [32, 32, 8, 1,  1,  4,2,  2]
          - [16, 16, 16, 1,  1,  1,1,  2]
          - [16, 16, 16, 1,  1,  1,2,  2]
          - [16, 16, 16, 1,  1,  2,1,  2]
          # - [32, 32, 4, 2]
          # - [32, 32, 8, 1]
          # - [16, 16, 16, 1]
        - ThreadTile:
          - [ 1, 32 ]
          # - [ 2, 16 ]
        - WorkGroup:
          - [ 64, 4, 1 ]
          # - [ 32, 8, 1 ]
        - AssertSummationElementMultiple: [1]
        - AssertFree0ElementMultiple: [1,4]
        - AssertFree1ElementMultiple: [1]
        - PrefetchGlobalRead: [1]
        - PrefetchLocalRead: [1]
        - DepthU: [32,64,128]
        # - DepthU: [32,64]
        - VectorWidth: [2]
        - GlobalReadVectorWidth: [2,4,8]
        # - GlobalReadVectorWidth: [2,8]
        # - LocalReadVectorWidth: [8]
        - SuppressNoLoadLoop: [0]
        - OptNoLoadLoop: [1]
        - ScheduleLocalWrite: [1]
        - ScheduleGlobalRead: [1]
        - ScheduleIterAlg: [3]
        - InnerUnroll: [1]
        - ExpandPointerSwap: [1]
        - TransposeLDS: [1]
        - LdsBlockSizePerPad: [-1]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - StoreRemapVectorWidth: [0,4]
        # - StaggerUMapping: [0,3]  # Ethan
        # - StaggerUStride: [128,256]  # Ethan
        # - StaggerU: [0,16,32]  # Ethan
        # - WorkGroupMapping: [1,2,15]  # Ethan
        - WorkGroupMapping: [1]  # Ethan
        - WaveSeparateGlobalReadA: [1]
        - WaveSeparateGlobalReadB: [1]
        # - 1LDSBuffer: [-1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          # - Exact: [7680, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [3840, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [1920, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [960, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [480, 512, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 7680, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 3840, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 1920, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 960, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 480, 1, 512, 544, 544, 544, 544]
          # - Exact: [8192, 8192, 1, 8192, 8384, 8384, 8384, 8384]
          # - Exact: [4096, 4096, 1, 4096, 4192, 4192, 4192, 4192]
          # - Exact: [2048, 2048, 1, 2048, 2080, 2080, 2080, 2080]
          # - Exact: [1024, 1024, 1, 1024, 1056, 1056, 1056, 1056]
          # - Exact: [512, 512, 1, 512, 544, 544, 544, 544]
          - Exact: {sizes: [64, 512, 16, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          - Exact: {sizes: [64, 512, 128, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 1, 1, 2]
          # - Exact: [1024, 1, 1, 1024]
          # - Exact: [1024, 8, 1, 1024]
          # - Exact: [1024, 77, 1, 1024]
          # - Exact: [1024, 77, 1, 30522]
          - Exact: [1024, 512, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          # - Exact: [1024, 512, 1, 4096]
          # - Exact: [1024, 616, 1, 1024]
          - Exact: [1024, 4096, 1, 2]
          # - Exact: [1024, 4096, 1, 1024]
          # - Exact: [1024, 4096, 1, 4096]
          # - Exact: [4096, 512, 1, 1024]
          # - Exact: [4096, 4096, 1, 1024]
          - Exact: {sizes: [64, 128, 128, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [64, 128, 160, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 10, 1, 2]
          # - Exact: [1024, 10, 1, 1024]
          # - Exact: [1024, 160, 1, 1024]
          # - Exact: [1024, 200, 1, 1024]
          # - Exact: [1024, 200, 1, 30522]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [1024, 1280, 1, 2]
          # - Exact: [1024, 1280, 1, 1024]
          # - Exact: [1024, 1280, 1, 4096]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [4096, 1280, 1, 1024]
          - Exact: {sizes: [64, 128, 624, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 39, 1, 2]
          # - Exact: [1024, 39, 1, 1024]
          # - Exact: [1024, 780, 1, 1024]
          # - Exact: [1024, 780, 1, 30522]
          # - Exact: [1024, 4992, 1, 2]
          # - Exact: [1024, 4992, 1, 1024]
          # - Exact: [1024, 4992, 1, 4096]
          # - Exact: [4096, 4992, 1, 1024]
          - Exact: {sizes: [64, 512, 64, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 4, 1, 2]
          # - Exact: [1024, 4, 1, 1024]
          # - Exact: [1024, 308, 1, 1024]
          # - Exact: [1024, 308, 1, 30522]
          # - Exact: [1024, 2048, 1, 2]
          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          # - Exact: [4096, 2048, 1, 1024]
          - Exact: {sizes: [64, 128, 640, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 40, 1, 2]
          # - Exact: [1024, 40, 1, 1024]
          # - Exact: [1024, 800, 1, 1024]
          # - Exact: [1024, 800, 1, 30522]
          # - Exact: [1024, 5120, 1, 2]
          # - Exact: [1024, 5120, 1, 1024]
          # - Exact: [1024, 5120, 1, 4096]
          # - Exact: [4096, 5120, 1, 1024]
          - Exact: {sizes: [64, 128, 656, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 41, 1, 2]
          # - Exact: [1024, 41, 1, 1024]
          # - Exact: [1024, 820, 1, 1024]
          # - Exact: [1024, 820, 1, 30522]
          # - Exact: [1024, 5248, 1, 2]
          # - Exact: [1024, 5248, 1, 1024]
          # - Exact: [1024, 5248, 1, 4096]
          # - Exact: [4096, 5248, 1, 1024]
          - Exact: {sizes: [64, 512, 80, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 5, 1, 2]
          # - Exact: [1024, 5, 1, 1024]
          # - Exact: [1024, 385, 1, 1024]
          # - Exact: [1024, 385, 1, 30522]
          # - Exact: [1024, 2560, 1, 2]
          # - Exact: [1024, 2560, 1, 1024]
          # - Exact: [1024, 2560, 1, 4096]
          # - Exact: [4096, 2560, 1, 1024]
          - Exact: {sizes: [64, 512, 96, 512], stridesA: [-1, 64, 32768], stridesB: [-1, 512, 262144], stridesC: [-1, 64, 32768], stridesD: [-1, 64, 32768] }
          # - Exact: [1024, 6, 1, 2]
          # - Exact: [1024, 6, 1, 1024]
          # - Exact: [1024, 462, 1, 1024]
          # - Exact: [1024, 462, 1, 30522]
          # - Exact: [1024, 3072, 1, 2]
          # - Exact: [1024, 3072, 1, 1024]
          # - Exact: [1024, 3072, 1, 4096]
          # - Exact: [4096, 3072, 1, 1024]
          # - Exact: [1024, 8, 1, 2]
          # - Exact: [1024, 160, 1, 30522]
          - Exact: {sizes: [64, 128, 144, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          # - Exact: [1024, 9, 1, 2]
          # - Exact: [1024, 9, 1, 1024]
          # - Exact: [1024, 180, 1, 1024]
          # - Exact: [1024, 180, 1, 30522]
          - Exact: [1024, 1152, 1, 2]
          # - Exact: [1024, 1152, 1, 1024]
          # - Exact: [1024, 1152, 1, 4096]
          # - Exact: [4096, 1152, 1, 1024]
          # - Exact: [256, 32768, 1, 128]
          # - Exact: [479, 32768, 1, 1024]
          # - Exact: [512, 32768, 1, 256]
          # - Exact: [1024, 32768, 1, 512]
          # - Exact: [1024, 32768, 1, 1024]
          - Exact: {sizes: [64, 128, 512, 128], stridesA: [-1, 64, 8192], stridesB: [-1, 128, 16384], stridesC: [-1, 64, 8192], stridesD: [-1, 64, 8192] }
          - Exact: {sizes: [128, 128, 512, 64], stridesA: [-1, 128, 8192], stridesB: [-1, 64, 8192], stridesC: [-1, 128, 8192], stridesD: [-1, 128, 8192] }
          - Exact: [1024, 32, 1, 2]
          # - Exact: [1024, 32, 1, 1024]
          # - Exact: [1024, 4096, 1, 30528]
          - Exact: {sizes: [512, 512, 64, 64], stridesA: [-1, 512, 32768], stridesB: [-1, 64, 32768], stridesC: [-1, 512, 262144], stridesD: [-1, 512, 262144] }
          # - Exact: [1024, 2048, 1, 30528]
          - Exact: {sizes: [64, 4, 32768, 4], stridesA: [-1, 2097152, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          - Exact: {sizes: [64, 4, 38400, 4], stridesA: [-1, 2457600, 64], stridesB: [-1, 4, 16], stridesC: [-1, 64, 256], stridesD: [-1, 64, 256] }
          # - Exact: [1024, 8192, 1, 1024]
          # - Exact: [1024, 8192, 1, 4096]
          # - Exact: [1024, 8192, 1, 33712]
          # - Exact: [1024, 9600, 1, 1024]
          # - Exact: [1024, 9600, 1, 4096]
          # - Exact: [1024, 9600, 1, 33712]
          # - Exact: [4096, 8192, 1, 1024]
          # - Exact: [4096, 9600, 1, 1024]
          # - Exact: [1024, 10064, 1, 1024]
          # - Exact: [1024, 10064, 1, 4096]
          # - Exact: [1024, 10080, 1, 1024]
          # - Exact: [1024, 10080, 1, 4096]
          # - Exact: [1024, 10080, 1, 42720]
          # - Exact: [1024, 10200, 1, 1024]
          # - Exact: [1024, 10200, 1, 4096]
          # - Exact: [1024, 3840, 1, 1024]
          # - Exact: [1024, 3840, 1, 4096]
          # - Exact: [1024, 3968, 1, 1024]
          # - Exact: [1024, 3968, 1, 4096]
          # - Exact: [1024, 3968, 1, 42720]
          # - Exact: [1024, 6528, 1, 1024]
          # - Exact: [1024, 6528, 1, 4096]
          # - Exact: [1024, 6528, 1, 42720]
          # - Exact: [1024, 7104, 1, 1024]
          # - Exact: [1024, 7104, 1, 4096]
          # - Exact: [1024, 7104, 1, 42720]
          # - Exact: [1024, 7200, 1, 1024]
          # - Exact: [1024, 7200, 1, 4096]
          # - Exact: [1024, 7200, 1, 42720]
          # - Exact: [1024, 8064, 1, 1024]
          # - Exact: [1024, 8064, 1, 4096]
          # - Exact: [1024, 8160, 1, 1024]
          # - Exact: [1024, 8160, 1, 4096]
          # - Exact: [1024, 9216, 1, 1024]
          # - Exact: [1024, 9216, 1, 4096]
          # - Exact: [1024, 9520, 1, 1024]
          # - Exact: [1024, 9520, 1, 4096]
          # - Exact: [1024, 9520, 1, 42720]
          # - Exact: [4096, 10064, 1, 1024]
          # - Exact: [4096, 10080, 1, 1024]
          # - Exact: [4096, 10200, 1, 1024]
          # - Exact: [4096, 3840, 1, 1024]
          # - Exact: [4096, 3968, 1, 1024]
          # - Exact: [4096, 6528, 1, 1024]
          # - Exact: [4096, 7104, 1, 1024]
          # - Exact: [4096, 7200, 1, 1024]
          # - Exact: [4096, 8064, 1, 1024]
          # - Exact: [4096, 8160, 1, 1024]
          # - Exact: [4096, 9216, 1, 1024]
          # - Exact: [4096, 9520, 1, 1024]

#
          - Exact: {sizes: [64, 14, 10880, 14], stridesA: [-1, 696320, 64], stridesB: [-1, 14, 196], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 14, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 210], stridesC: [-1, 64, 896], stridesD: [-1, 64, 896] }
          - Exact: {sizes: [64, 15, 7680, 15], stridesA: [-1, 491520, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 10880, 15], stridesA: [-1, 696320, 64], stridesB: [-1, 15, 225], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 15, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 255], stridesC: [-1, 64, 960], stridesD: [-1, 64, 960] }
          - Exact: {sizes: [64, 17, 6144, 17], stridesA: [-1, 393216, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 7680, 17], stridesA: [-1, 491520, 64], stridesB: [-1, 17, 289], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 17, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 357], stridesC: [-1, 64, 1088], stridesD: [-1, 64, 1088] }
          - Exact: {sizes: [64, 21, 6144, 21], stridesA: [-1, 393216, 64], stridesB: [-1, 21, 441], stridesC: [-1, 64, 1344], stridesD: [-1, 64, 1344] }
          - Exact: {sizes: [64, 24, 4736, 24], stridesA: [-1, 303104, 64], stridesB: [-1, 24, 576], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 24, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 816], stridesC: [-1, 64, 1536], stridesD: [-1, 64, 1536] }
          - Exact: {sizes: [64, 30, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 900], stridesC: [-1, 64, 1920], stridesD: [-1, 64, 1920] }
          - Exact: {sizes: [64, 31, 2048, 30], stridesA: [-1, 131072, 64], stridesB: [-1, 30, 930], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 31, 2048, 31], stridesA: [-1, 131072, 64], stridesB: [-1, 31, 961], stridesC: [-1, 64, 1984], stridesD: [-1, 64, 1984] }
          - Exact: {sizes: [64, 32, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1024], stridesC: [-1, 64, 2048], stridesD: [-1, 64, 2048] }
          - Exact: {sizes: [64, 34, 4736, 34], stridesA: [-1, 303104, 64], stridesB: [-1, 34, 1156], stridesC: [-1, 64, 2176], stridesD: [-1, 64, 2176] }
          - Exact: {sizes: [64, 35, 4608, 32], stridesA: [-1, 294912, 64], stridesB: [-1, 32, 1120], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }
          - Exact: {sizes: [64, 35, 4608, 35], stridesA: [-1, 294912, 64], stridesB: [-1, 35, 1225], stridesC: [-1, 64, 2240], stridesD: [-1, 64, 2240] }

          # - Exact: [1024, 2048, 1, 1024]
          # - Exact: [64, 512, 1, 512]
          - Exact: [1024, 2048, 1, 2]
          # - Exact: [4096, 2048, 1, 1024]
          # - Exact: [1024, 2048, 1, 4096]
          - Exact: [512, 512, 1, 64]
          # - Exact: [1024, 1024, 1, 4096]
          - Exact: [128, 128, 1, 64]
          # - Exact: [64, 128, 1, 128]
          # - Exact: [4096, 1024, 1, 1024]
          # - Exact: [1024, 1024, 1, 1024]
          - Exact: [1024, 1024, 1, 2]
          # - Exact: [1024, 512, 1, 1024]
          - Exact: [1024, 512, 1, 64]
          # - Exact: [74, 512, 1, 2048]
          - Exact: [64, 5, 1, 5]
          # - Exact: [2048, 512, 1, 2048]
          # - Exact: [512, 1600, 1, 512]
          - Exact: [32, 33, 1, 33]
          # - Exact: [560, 1600, 1, 1024]
          - Exact: [512, 1600, 1, 32]
          # - Exact: [1024, 1600, 1, 1024]


# LibraryLogic:
#     ScheduleName: "arcturus"
#     DeviceNames: ["Device 7380", "Device 7388", "Device 738c", "Device 7390"]
#     ArchitectureName: "gfx908"

# LibraryClient:
